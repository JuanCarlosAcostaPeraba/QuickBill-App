---
import Layout from '@/layouts/Layout.astro'

const ERRORS = {
	msg: '',
}

if (Astro.cookies.get('qid')) {
	return new Response(null, {
		status: 302,
		headers: { Location: '/' },
	})
}

if (Astro.request.method === 'POST') {
	try {
		const data = await Astro.request.formData()
		const email = String(data.get('email') || '').trim()
		const password = String(data.get('password') || '').trim()
		const rememberMe = data.get('remember-me')

		if (!email || !password) {
			ERRORS.msg = 'Email and password are required.'
		} else {
			// Firebase Auth REST API: signInWithPassword
			const apiKey = import.meta.env.PUBLIC_FIREBASE_API_KEY
			const url =
				`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`

			const res = await fetch(url, {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify({
					email,
					password,
					returnSecureToken: true,
				}),
			})

			if (!res.ok) {
				const err = await res.json()
				ERRORS.msg = err.error?.message || 'Authentication failed.'
			} else {
				const { idToken } = await res.json()

				// Set cookie (1 hour if no remember-me, 30 days otherwise)
				const maxAge = rememberMe ? 60 * 60 * 24 * 30 : undefined
				const cookie = [
					`qid=${idToken}`,
					'Path=/',
					'HttpOnly',
					'Secure',
					'SameSite=Strict',
					maxAge ? `Max-Age=${maxAge}` : '',
				]
					.filter(Boolean)
					.join('; ')

				return new Response(null, {
					status: 302,
					headers: {
						Location: '/',
						'Set-Cookie': cookie,
					},
				})
			}
		}
	} catch (error) {
		ERRORS.msg = 'Server error. Please try again.'
	}
}
---

<Layout
	title="QuickBill | Sign in"
	description="Access your QuickBill admin dashboard.">
	<section
		class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8 dark:bg-gray-800">
		<div class="w-full max-w-md space-y-8">
			<div>
				<h1
					class="text-center text-3xl font-extrabold text-gray-900 dark:text-gray-200">
					QuickBill
				</h1>
				<h2
					class="mt-6 text-center text-xl font-semibold text-gray-700 dark:text-gray-400">
					Sign in to your account
				</h2>
			</div>

			<form id="login-form" class="mt-8 space-y-6" method="POST">
				<div class="rounded-md shadow-sm -space-y-px">
					<!-- Email -->
					<div>
						<label for="email-address" class="sr-only">Email address</label>
						<input
							id="email-address"
							name="email"
							type="email"
							autocomplete="email"
							class="appearance-none dark:text-white rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
							placeholder="Email address"
						/>
					</div>

					<!-- Password -->
					<div>
						<label for="password" class="sr-only">Password</label>
						<input
							id="password"
							name="password"
							type="password"
							autocomplete="current-password"
							class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm dark:text-white"
							placeholder="Password"
						/>
					</div>
				</div>

				<!-- Remember me -->
				<div class="flex items-center justify-between">
					<div class="flex items-center">
						<input
							id="remember-me"
							name="remember-me"
							type="checkbox"
							class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
						/>
						<label
							for="remember-me"
							class="ml-2 block text-sm text-gray-900 dark:text-neutral-400">
							Remember me
						</label>
					</div>
				</div>

				<!-- Submit -->
				<button
					class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
					Sign in
				</button>
			</form>

			<!-- Error Message -->
			{
				ERRORS.msg && (
					<div class="flex mt-4 rounded-md bg-red-50 p-4 dark:bg-red-900 ">
						<p class="text-sm font-medium text-red-700 dark:text-red-200">
							{ERRORS.msg}
						</p>
					</div>
				)
			}
		</div>
	</section>
</Layout>
